@using Kentico.Xperience.Disqus
@model DisqusComponentViewModel
@inject Microsoft.AspNetCore.Antiforgery.IAntiforgery antiforgery

@{
    var token = antiforgery.GetAndStoreTokens(Context);
}

<div id="disqus_thread" class="@Model.CssClass"></div>

<script>
    var disqus_config = function () {
        this.page.url = '@Model.Url';
        this.page.identifier = '@Model.Identifier';
        if ('@Model.Title' !== '') {
            this.page.title = '@Model.Title';
        }

        @if (DisqusHelper.CommentActivityTrackingEnabled)
        {
        <text>
        this.callbacks.onNewComment = [(comment) => {
            var formData = new FormData();
            formData.append('message', comment.text);
            formData.append('nodeId', @(Model.Node == null ? 0 : Model.Node.NodeID));
            formData.append('culture', '@(Model.Node == null ? "" : Model.Node.DocumentCulture)');
            fetch('~/kentico.xperience.disqus/LogCommentActivity', {
                method: 'post',
                mode: 'same-origin',
                headers: {
                    '@token.HeaderName': '@token.RequestToken'
                },
                body: formData
            });
        }];
        </text>
        }
    };

    (function() {
        var d = document, s = d.createElement('script');
        s.src = '//@(Model.Site).disqus.com/embed.js';
        s.setAttribute('data-timestamp', +new Date());
        (d.head || d.body).appendChild(s);
    })();
</script>
<noscript>Please enable JavaScript to view the <a href="https://disqus.com/?ref_noscript">comments powered by Disqus.</a></noscript>