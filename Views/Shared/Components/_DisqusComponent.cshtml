@using Disqus.Models
@model DisqusComponentViewModel

<link rel="stylesheet" href="/disqus.css" />
<script>
    function voteClick(sender) {

        var btn = $(sender);
        btn.prop('disabled', true);
        var id = btn.data('post-id');
        var isLike = btn.data('is-like');
        var container = $('#post_' + id);
        $.ajax({
            method: 'POST',
            url: '@Url.Action("VotePost", "Disqus")',
            data: {
                id: id,
                isLike: isLike
            }
        }).done(function (data, statusText, xhdr) {
            container.before(data);
            container.remove();
        }).fail(function (xhdr, statusText, errorText) {
            alert(xhdr.responseText);
            btn.prop("disabled", false);
        });

    }
</script>

<div id="disqus_thread" class="container">
    <h1>@Model.Header</h1>

    @if (Model.Exception != null)
    {
        await Html.RenderPartialAsync("_DisqusException.cshtml", Model.Exception);
    }
    else
    {
        await Html.RenderPartialAsync("_DisqusPostForm.cshtml", new DisqusPost()
        {
            Thread = Model.Thread.Id
        });

        foreach (var post in Model.Posts.Where(p => string.IsNullOrEmpty(p.Parent)))
        {
            await Html.RenderPartialAsync("_DisqusPost.cshtml", post);
        }
    }
</div>
