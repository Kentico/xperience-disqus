@using Disqus.Models
@using Disqus.Services
@model DisqusComponentViewModel
@inject IDisqusService disqusService
@inject DisqusRepository disqusRepository

@{ 
    var placeholderText = Model.Thread.Posts > 0 ? disqusService.CurrentForum.CommentsPlaceholderTextPopulated : disqusService.CurrentForum.CommentsPlaceholderTextEmpty;
}
<link rel="stylesheet" href="/disqus.css" />
<script src="/disqus.js"></script>
<script src="//cdn.quilljs.com/1.3.6/quill.min.js"></script>
<link href="//cdn.quilljs.com/1.3.6/quill.snow.css" rel="stylesheet">
<script>
    $(document).ready(function () {
        var isSubscribed = ('@(Model.Thread.UserSubscription)' === 'True');
        setIsSubscribed(isSubscribed);

        var isRecommended = ('@(Model.Thread.UserScore == 1)' === 'True');
        setIsRecommended(isRecommended);

        initQuillEditor('', ('@disqusService.CurrentForum.Settings.MediaEmbedEnabled' == 'True'), `@placeholderText`);
    });
</script>

<div id="disqus_thread">
    <div class="row mb-5">
        <div class="disqus-header">
            @Model.Header
        </div>
        
        @if (Model.Thread.RatingsEnabled && disqusService.CurrentForum.Settings.ThreadRatingsEnabled)
        {
            await Html.RenderPartialAsync("_DisqusStarRatings.cshtml", new DisqusRatingViewModel()
            {
                Disabled = true,
                Classes = "mx-0",
                StarId = "header",
                Rating = await disqusRepository.GetThreadAverageRating(Model.Thread.Id),
                DisplaySummary = true,
                ThreadId = Model.Thread.Id
            });
        }
    </div>
    
    @if (!Model.Thread.IsClosed)
    {
        await Html.RenderPartialAsync("_DisqusPostForm.cshtml", new DisqusEditingFormModel()
        {
            PostThread = Model.Thread.Id,
            RatingsEnabled = Model.Thread.RatingsEnabled && disqusService.CurrentForum.Settings.ThreadRatingsEnabled
        });
    }
    else
    {
        <p>This thread is closed.</p>
    }

    <div class="d-flex flex-row justify-content-end thread-options my-1">
        @if (disqusService.IsAuthenticated())
        {
            <div class="d-inline align-middle px-1">
                <span class="recommend-heart">&#10084;</span>
                <a class="recommend-link align-middle" onclick="javascript:recommendThread(this)" data-thread-id="@Model.Thread.Id" data-url="@Url.Action("RecommendThread", "Disqus")">Recommend</a>
            </div>
            <div class="d-inline align-middle px-1">
                <img class="align-middle" src="/email.png" />
                <a class="subscribe-link align-middle" onclick="javascript:subscribeThread(this)" data-thread-id="@Model.Thread.Id" data-url="@Url.Action("SubscribeThread", "Disqus")">Subscribe</a>
            </div>
        }
        <div class="d-inline align-middle px-1">
            <img class="align-middle" src="/rss.png" />
            <a class="align-middle" href="@Model.Thread.Feed" target="_blank">RSS</a>
        </div>
    </div>

    @foreach (var post in Model.Posts)
    {
        await Html.RenderPartialAsync("_DisqusPost.cshtml", post);
    }

    <div class="d-flex flex-row justify-content-between mt-3">
        @if (!string.IsNullOrEmpty(disqusService.CurrentForum.CommentPolicyText))
        {
            <div class="comment-policy">
                <span>@disqusService.CurrentForum.CommentPolicyText</span>
                @if (!string.IsNullOrEmpty(disqusService.CurrentForum.CommentPolicyLink))
                {
                    <span>Please read our <a href="@disqusService.CurrentForum.CommentPolicyLink" target="_blank">Comment Policy</a> before commenting.</span>
                }
            </div>
        }
        @if (!disqusService.CurrentForum.DisableDisqusBranding)
        {
            <div class="powered-by-disqus align-middle">
                Powered by&nbsp;
                <a href="https://disqus.com">
                    <img class="disqus-logo" src="/disqus-logo.png" />
                </a>
            </div>
        }
    </div>
</div>

@{
    await Html.RenderPartialAsync("_DisqusReportReason.cshtml");
}
