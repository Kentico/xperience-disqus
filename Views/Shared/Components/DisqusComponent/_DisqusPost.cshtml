@using Disqus.Models
@using Disqus.Services
@model DisqusPost
@inject IDisqusService disqusService

@{
    Layout = null;
    var cssClass = string.IsNullOrEmpty(Model.Parent) ? "disqus-post" : "child-post";
}

<script>
    $(document).ready(function () {

        // Reveal report button on hover
        $('#post_@(Model.Id)_main, #post_@(Model.Id)_report').hover(function (e) {
            $('#post_@(Model.Id)_report').show();
        }, function (e) {
            $('#post_@(Model.Id)_report').hide();
        });

        // Transfer post ID when report button is clicked
        $('#post_@(Model.Id)_report .report-button').click(function () {
            $('#reportReasonModal #report_button').data('post-id', '@Model.Id');
        });
    });
</script>

<div id="post_@Model.Id" class="row @cssClass">
    @if (!string.IsNullOrEmpty(Model.Parent))
    {
        <div class="col-auto p-1">&nbsp;</div>
    }
    <div class="col">
        <div class="row">
            <div id="post_@(Model.Id)_report" class="post-flag-container">
                <button class="report-button" title="Report post" data-post-id="@Model.Id" data-toggle="modal" data-target="#reportReasonModal">
                    &#127988
                </button>
            </div>
            <div class="post-sidebar col-auto">
                <a href="@Model.Author.ProfileUrl" target="_blank">
                    <img class="disqus-user-avatar" src="@Model.Author.GetAvatarUrl()" />
                    <br /><span class="post-author">@Model.Author.Name</span>
                </a>
            </div>
            <div id="post_@(Model.Id)_main" class="post-main col">
                <div class="post-header">
                    <span class="post-date">
                        &commat; @Model.CreatedAt.ToString()
                        @if (Model.IsEdited)
                        {
                            <i>(Edited)</i>
                        }
                    </span>
                </div>
                <div class="post-content">
                    @Html.Raw(Model.Raw_Message)
                </div>
                <div class="post-footer">
                    @if (Model.CanVote)
                    {
                        <button onclick="voteClick(this)" data-post-id="@Model.Id" data-is-like="true" class="btn vote-button">
                            &#9650; @Model.Likes
                        </button>
                        <button onclick="voteClick(this)" data-post-id="@Model.Id" data-is-like="false" class="btn vote-button">
                            &#9660; @Model.Dislikes
                        </button>
                    }
                    <div class="d-inline px-2">
                        @if (!Model.ThreadObject.IsClosed && disqusService.IsAuthenticated())
                        {
                            <a class="btn btn-link" data-toggle="collapse" data-target="#post_reply_container_reply_@Model.Id"
                               role="button" aria-expanded="false" aria-controls="post_reply_container_reply_@Model.Id">
                                Reply
                            </a>
                        }

                        @if (disqusService.IsAuthenticated() &&
                      disqusService.CurrentUser.UserID == Model.Author.Id &&
                      !Model.ThreadObject.IsClosed &&
                      DateTime.Now < Model.EditableUntil)
                        {
                            <span>&nbsp;|&nbsp;&nbsp;<a class="btn btn-link" onclick="javascript:editPost(this)" data-post-id="@Model.Id">Edit</a></span>
                        }
                        @if (disqusService.IsAuthenticated() &&
                      disqusService.CurrentUser.UserID == Model.Author.Id &&
                      !Model.ThreadObject.IsClosed)
                        {
                            <span>&nbsp;|&nbsp;&nbsp;<a class="btn btn-link" onclick="javascript:deletePost(this)" data-post-id="@Model.Id">Delete</a></span>
                        }
                    </div>
                </div>
            </div>
            <div class="w-100"></div>
            @if (!Model.ThreadObject.IsClosed)
            {
                await Html.RenderPartialAsync("_DisqusPostForm.cshtml", new DisqusPost()
                {
                    Thread = Model.Thread,
                    Parent = Model.Id
                });
            }
            @foreach (var child in Model.ChildPosts)
            {
                await Html.RenderPartialAsync("_DisqusPost.cshtml", child);
            }
        </div>
    </div>
</div>

