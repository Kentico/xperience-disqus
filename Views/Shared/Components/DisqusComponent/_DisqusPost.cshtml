@using Disqus.Models
@using Disqus.Services
@model DisqusPost
@inject IDisqusService disqusService

@{
    Layout = null;
    var cssClass = string.IsNullOrEmpty(Model.Parent) ? "disqus-post" : "child-post";
}

<script>
    $(document).ready(function () {
        // Transfer post ID when report button is clicked
        $('#post_@(Model.Id)_report .report-button').click(function () {
            $('#reportReasonModal #report_button').data('post-id', '@Model.Id');
        });
    });
</script>

<div id="post_@Model.Id" class="row @cssClass">
    <a id="comment-@Model.Id"></a>
    <div class="col">
        <div class="row">
            <div id="post_@(Model.Id)_report" class="post-flag-container">
                <button class="report-button" title="Report post" data-post-id="@Model.Id" data-toggle="modal" data-target="#reportReasonModal">
                    &#127988
                </button>
            </div>
            <div class="post-sidebar col text-break">
                <a href="javascript:showUser('@Model.Author.Id')">
                    <img class="disqus-user-avatar" src="@Model.Author.AvatarUrl" />
                    <br /><span class="post-author">@Model.Author.Name</span>
                </a>
            </div>
            <div id="post_@(Model.Id)_main" class="post-main col">
                <div class="post-header">
                    <span class="post-date">
                        &commat; @Model.CreatedAt.ToString()
                        @if (Model.IsEdited)
                        {
                            <i>(Edited)</i>
                        }
                    </span>
                </div>
                <div id="post_@(Model.Id)_content" class="post-content">
                    @Html.Raw(Model.Raw_Message)
                </div>
                @{
                    await Html.RenderPartialAsync("_DisqusPostFooter.cshtml", Model);
                }
                <div class="w-100"></div>
                @if (!Model.ThreadObject.IsClosed)
                {
                    await Html.RenderPartialAsync("_DisqusPostForm.cshtml", new DisqusPost()
                    {
                        Thread = Model.Thread,
                        Forum = Model.Forum,
                        Parent = Model.Id
                    });
                }
                @foreach (var child in Model.ChildPosts)
                {
                    await Html.RenderPartialAsync("_DisqusPost.cshtml", child);
                }
            </div>
        </div>
    </div>
</div>