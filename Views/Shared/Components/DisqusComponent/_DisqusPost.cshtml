@using Disqus.Models
@using Disqus.Services
@model DisqusPost
@inject IDisqusService disqusService
@inject DisqusRepository disqusRepository

@{
    Layout = null;
    var cssClass = string.IsNullOrEmpty(Model.Parent) ? "disqus-post" : "child-post";
    var margin = $"{Model.NestingLevel * 50}px";
}

<script>
    $(document).ready(function () {
        $(`#post_@Model.Id`).hover(
        function () {
            $(this).find('.post-flag-container').toggleClass('d-none');
            $(this).find('.social-sharing').toggleClass(['d-none', 'd-inline']);
        });
    });
</script>
<div id="post_@Model.Id" class="row row-cols-2 mt-3 @cssClass" style="margin-left:@margin">

    <div class="post-sidebar col-auto">
        <a id="comment-@Model.Id"></a>
        <a class="cursor-pointer" onclick="showUser(this)" data-user-id="@Model.Author.Id" data-url="@Url.Action("GetUserDetailBody", "Disqus")">
            <img class="disqus-user-avatar" src="@Model.Author.AvatarUrl" />
        </a>
        @if (await disqusRepository.IsModerator(Model.Author.Id))
        {
            <div class="user-badge badge-mod">@disqusService.CurrentForum.ModeratorBadgeText</div>
        }
    </div>

    <div class="post-main col-auto">
        <div class="row row-cols-1">

            <div class="post-header col px-0">
                <span class="post-author">
                    <a onclick="showUser(this)" class="user-link cursor-pointer" data-user-id="@Model.Author.Id" data-url="@Url.Action("GetUserDetailBody", "Disqus")">@Model.Author.Name</a>
                </span>
                <span class="post-date">
                    &commat; @Model.CreatedAt.ToString()
                    @if (Model.IsEdited)
                    {
                        <i>(Edited)</i>
                    }
                </span>
            </div>

            @if (Model.Author.ThreadRating > 0 && disqusService.CurrentForum.Settings.ThreadRatingsEnabled && Model.ThreadObject.RatingsEnabled)
            {
                await Html.RenderPartialAsync("_DisqusStarRatings.cshtml", new DisqusRatingViewModel()
                {
                    Disabled = true,
                    Classes = "px-0 pt-1",
                    StarId = $"post-{Model.Id}",
                    Rating = Model.Author.ThreadRating

                });
            }

            <div class="post-content col px-0">
                @Html.Raw(Model.Raw_Message)
            </div>
            @{
                await Html.RenderPartialAsync("_DisqusPostFooter.cshtml", Model);
            }

        </div>
    </div>

    <div class="post-flag-container d-none">
        <button class="report-button" title="Report post" onclick="$('#reportReasonModal #report_button').data('post-id', '@Model.Id');" data-toggle="modal" data-target="#reportReasonModal">
            &#127988
        </button>
    </div>

</div>
