@using Disqus.Models
@using Disqus.Services
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@addTagHelper *, Kentico.Content.Web.Mvc
@model DisqusPost
@inject IDisqusService disqusService

@{ 
    Layout = null;
    var doCollapse = Model.IsEditing || string.IsNullOrEmpty(Model.Parent) ? "" : "collapse";

    // If creating a new reply, Model.Id will be empty, set to parent (the post we're replying to)
    var id = string.IsNullOrEmpty(Model.Id) ? $"reply_{Model.Parent}" : Model.Id;
}

<script>
    $(document).ready(function () {
        var quill = new window.Quill('#post_reply_container_@id #editor', {
            bounds: '#post_reply_container_@id #editor_container',
            theme: 'snow',
            placeholder: 'Join the discussion..'
        });

        // Set HTML content (if editing)
        if ('@Model.IsEditing.ToString()' === 'True') {
            const delta = quill.clipboard.convert('@Html.Raw(Model.Raw_Message)');
            quill.setContents(delta, 'silent');
        }

        // Update Message value when Quill changes
        quill.on('text-change', function (delta, oldDelta, source) {
            var richText = quill.root.innerHTML;
            $('#post_reply_container_@id #Message').val(richText);
        });
    });
</script>

<div id="post_reply_container_@id" class="post-reply-container col @doCollapse">
    @if (!disqusService.IsAuthenticated())
    {
        await Html.RenderPartialAsync("_DisqusLoginForm.cshtml");
    }
    else
    {
        <form class="post-form" asp-action="SubmitPost" asp-controller="Disqus" asp-antiforgery="true"
            data-ajax="true" data-ajax-success="updatePost" data-ajax-begin="ajaxBegin" data-ajax-complete="ajaxComplete">
            <input asp-for="Id" />
            <input asp-for="Message" />
            <input asp-for="Thread" />
            <input asp-for="Parent" />
            <input asp-for="IsEditing" />

            <div class="form-group row">
                @if (!Model.IsEditing)
                {
                    <div class="col-auto">
                        <img class="disqus-user-avatar-sm" src="@disqusService.CurrentUser.Avatar" />
                    </div>
                }
                <div id="editor_container" class="col p-0 form-group-input">
                    <span class="form-posting-as">You're posting as @disqusService.CurrentUser.FullName</span>
                    <div id="editor"></div>
                </div>
                <div class="col-4 pt-3">
                    <input type="submit" name="submitButton" value="Submit" class="btn btn-secondary btn-sm" />
                    @if (Model.IsEditing)
                    {
                        <div class="pt-1">
                            <input type="button" onclick="cancelEdit(this)" data-url="@Url.Action("GetPostBody", "Disqus")" data-post-id="@Model.Id" name="cancelButton" value="Cancel" class="btn btn-danger btn-sm" />
                        </div>
                    }
                </div>
            </div>
        </form>
    }
</div>
