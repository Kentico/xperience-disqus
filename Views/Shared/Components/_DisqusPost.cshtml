@using Disqus.Models
@model DisqusPost

@{
    var cssClass = string.IsNullOrEmpty(Model.Parent) ? "disqus-post" : "child-post";
}

<div id="post_@Model.Id" class="row @cssClass">
    <div class="post-sidebar col-auto">
        <a href="@Model.Author.ProfileUrl" target="_blank">
            <img class="disqus-user-avatar" src="@Model.Author.GetAvatarUrl()" />
            <br /><span class="post-author">@Model.Author.Name</span>
        </a>
    </div>
    <div class="post-main col">
        <div class="post-header">
            <span class="post-date">&commat; @Model.CreatedAt.ToString()</span>
        </div>
        <div class="post-content">
            @Html.Raw(Model.Message)
        </div>
        <div class="post-footer">
            @{
                await Html.RenderPartialAsync("_DisqusPostFooter.cshtml", new DisqusPostFooterModel() {
                    PostId = Model.Id,
                    Likes = Model.Likes,
                    Dislikes = Model.Dislikes
                });
            }
        </div>
        <div id="post_reply_container_@Model.Id" class="post-reply-container col collapse">
            @{
                await Html.RenderPartialAsync("_DisqusPostForm.cshtml", new DisqusPost()
                {
                    Thread = Model.Thread,
                    Parent = Model.Id
                });
            }
        </div>
    </div>
    @foreach (var child in Model.ChildPosts)
    {
        await Html.RenderPartialAsync("_DisqusPost.cshtml", child);
    }
</div>
